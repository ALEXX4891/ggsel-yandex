/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiClientDataErrorResponse from '../model/ApiClientDataErrorResponse';
import ApiForbiddenErrorResponse from '../model/ApiForbiddenErrorResponse';
import ApiLimitErrorResponse from '../model/ApiLimitErrorResponse';
import ApiNotFoundErrorResponse from '../model/ApiNotFoundErrorResponse';
import ApiServerErrorResponse from '../model/ApiServerErrorResponse';
import ApiUnauthorizedErrorResponse from '../model/ApiUnauthorizedErrorResponse';
import GetFulfillmentWarehousesResponse from '../model/GetFulfillmentWarehousesResponse';
import GetPagedWarehousesRequest from '../model/GetPagedWarehousesRequest';
import GetPagedWarehousesResponse from '../model/GetPagedWarehousesResponse';
import GetWarehousesResponse from '../model/GetWarehousesResponse';
import UpdateWarehouseStatusRequest from '../model/UpdateWarehouseStatusRequest';
import UpdateWarehouseStatusResponse from '../model/UpdateWarehouseStatusResponse';

/**
* Warehouses service.
* @module api/WarehousesApi
* @version LATEST
*/
export default class WarehousesApi {

    /**
    * Constructs a new WarehousesApi. 
    * @alias module:api/WarehousesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getFulfillmentWarehouses operation.
     * @callback module:api/WarehousesApi~getFulfillmentWarehousesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetFulfillmentWarehousesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Идентификаторы складов Маркета (FBY)
     * {% include notitle [access](../../_auto/method_scopes/getFulfillmentWarehouses.md) %}  Возвращает список складов Маркета с их идентификаторами.  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
     * @param {module:api/WarehousesApi~getFulfillmentWarehousesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetFulfillmentWarehousesResponse}
     */
    getFulfillmentWarehouses(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKey', 'OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetFulfillmentWarehousesResponse;
      return this.apiClient.callApi(
        '/warehouses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPagedWarehouses operation.
     * @callback module:api/WarehousesApi~getPagedWarehousesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetPagedWarehousesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Список складов
     * {% include notitle [access](../../_auto/method_scopes/getPagedWarehouses.md) %}  Возвращает список складов и информацию о них.  {% note warning \"Ограничение для параметра `limit`\" %}  Не передавайте значение больше 25.  {% endnote %}  |**⚙️ Лимит:** 1000 запросов в час| |-| 
     * @param {Number} businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
     * @param {Object} opts Optional parameters
     * @param {String} [pageToken] Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются. 
     * @param {Number} [limit] Количество значений на одной странице. 
     * @param {module:model/GetPagedWarehousesRequest} [getPagedWarehousesRequest] 
     * @param {module:api/WarehousesApi~getPagedWarehousesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetPagedWarehousesResponse}
     */
    getPagedWarehouses(businessId, opts, callback) {
      opts = opts || {};
      let postBody = opts['getPagedWarehousesRequest'];
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling getPagedWarehouses");
      }

      let pathParams = {
        'businessId': businessId
      };
      let queryParams = {
        'page_token': opts['pageToken'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKey', 'OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetPagedWarehousesResponse;
      return this.apiClient.callApi(
        '/businesses/{businessId}/warehouses', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getWarehouses operation.
     * @callback module:api/WarehousesApi~getWarehousesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetWarehousesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Список складов и групп складов
     * {% include notitle [access](../../_auto/method_scopes/getWarehouses.md) %}  {% note warning \"Этот метод устарел\" %}  Вместо него используйте [POST businesses/{businessId}/warehouses](../../reference/warehouses/getPagedWarehouses.md).  {% endnote %}  Возвращает список складов и, если склады объединены, список групп складов. [Что такое группы складов и зачем они нужны](https://yandex.ru/support/marketplace/assortment/operations/stocks.html#unified-stocks)  Среди прочего запрос позволяет определить идентификатор, который нужно использовать при передаче остатков для группы складов.  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
     * @param {Number} businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
     * @param {module:api/WarehousesApi~getWarehousesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetWarehousesResponse}
     */
    getWarehouses(businessId, callback) {
      let postBody = null;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling getWarehouses");
      }

      let pathParams = {
        'businessId': businessId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKey', 'OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetWarehousesResponse;
      return this.apiClient.callApi(
        '/businesses/{businessId}/warehouses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateWarehouseStatus operation.
     * @callback module:api/WarehousesApi~updateWarehouseStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateWarehouseStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Изменение статуса склада
     * {% include notitle [access](../../_auto/method_scopes/updateWarehouseStatus.md) %}  Отключает или включает склад.  После отключения склада товары, которые находятся на нем, скрываются через 15 минут. После включения они возвращаются на витрину через 15 минут, а если склад был выключен 30 дней или дольше — через 4 часа.  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param {Number} campaignId Идентификатор магазина в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
     * @param {module:model/UpdateWarehouseStatusRequest} updateWarehouseStatusRequest 
     * @param {module:api/WarehousesApi~updateWarehouseStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateWarehouseStatusResponse}
     */
    updateWarehouseStatus(campaignId, updateWarehouseStatusRequest, callback) {
      let postBody = updateWarehouseStatusRequest;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling updateWarehouseStatus");
      }
      // verify the required parameter 'updateWarehouseStatusRequest' is set
      if (updateWarehouseStatusRequest === undefined || updateWarehouseStatusRequest === null) {
        throw new Error("Missing the required parameter 'updateWarehouseStatusRequest' when calling updateWarehouseStatus");
      }

      let pathParams = {
        'campaignId': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKey', 'OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateWarehouseStatusResponse;
      return this.apiClient.callApi(
        '/campaigns/{campaignId}/warehouse/status', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
